---
# tasks file for traefik

- name: Create traefik user
  user:
    name: traefik
    shell: /usr/sbin/nologin
    home: /var/lib/traefik
    create_home: yes

- name: Ensure traefik user is in ssl-cert group
  user:
    name: traefik
    groups: ssl-cert
    append: yes

- name: Download traefik binary
  get_url:
    url: https://github.com/traefik/traefik/releases/download/v3.4.4/traefik_v3.4.4_linux_amd64.tar.gz
    dest: /tmp/traefik.tar.gz
    mode: '0644'

- name: Ensure /tmp/traefik directory exists
  file:
    path: /tmp/traefik
    state: directory

- name: Extract traefik tarball into /tmp
  unarchive:
    src: /tmp/traefik.tar.gz
    dest: /tmp/traefik
    remote_src: yes
    creates: /tmp/traefik/traefik

- name: Copy traefik binary to /usr/local/bin
  copy:
    src: /tmp/traefik/traefik
    dest: /usr/local/bin/traefik
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: Create traefik configuration directory
  file:
    path: /etc/traefik
    state: directory
    owner: traefik
    group: traefik
    mode: '0755'

- name: Create traefik log directory
  file:
    path: /var/log/traefik
    state: directory
    owner: traefik
    group: traefik
    mode: '0755'

- name: Deploy Traefik configuration files
  become: yes
  ansible.builtin.copy:
    dest: "/etc/traefik/{{ item.name }}"
    owner: traefik
    group: traefik
    mode: '0644'
    content: "{{ item.content }}"
  loop:
  - name: traefik.yml
    content: |
      entryPoints:
        traefik-dashboard-http:
          address: "192.168.0.2:80"
        traefik-dashboard-https:
          address: "192.168.0.2:443"
        netdata-http:
          address: "192.168.0.3:80"
        netdata-https:
          address: "192.168.0.3:443"

      api:
        dashboard: true

      providers:
        file:
          directory: /etc/traefik/
          watch: true
        docker:
          endpoint: "unix:///var/run/docker.sock"
          exposedByDefault: false

      log:
        filePath: "/var/log/traefik/traefik.log"
        level: "INFO"

      accessLog:
        filePath: "/var/log/traefik/access.log"

  - name: routers.yml
    content: |
      tls:
        certificates:
          - certFile: /etc/letsencrypt/live/wisecode.org/fullchain.pem
            keyFile: /etc/letsencrypt/live/wisecode.org/privkey.pem

      http:
        routers:
          traefik-dashboard-http:
            rule: "Host(`traefik.snoopy.wisecode.org`)"
            entryPoints:
              - traefik-dashboard-http
            middlewares:
              - redirect-to-https
            service: api@internal

          traefik-dashboard-https:
            rule: "Host(`traefik.snoopy.wisecode.org`)"
            entryPoints:
              - traefik-dashboard-https
            service: api@internal
            tls: {}

          netdata-http:
            rule: "Host(`netdata.snoopy.wisecode.org`)"
            entryPoints:
              - netdata-http
            middlewares:
              - redirect-to-https
            service: netdata

          netdata-https:
            rule: "Host(`netdata.snoopy.wisecode.org`)"
            entryPoints:
              - netdata-https
            service: netdata
            tls: {}

  - name: services.yml
    content: |
      http:
        services:
          netdata:
            loadBalancer:
              servers:
                - url: "http://127.0.0.1:19999"

  - name: middlewares.yml
    content: |
      http:
        middlewares:
          redirect-to-https:
            redirectScheme:
              scheme: https
              permanent: true

- name: Allow traefik to bind to ports <1024 without root
  community.general.capabilities:
    path: /usr/local/bin/traefik
    capability: cap_net_bind_service=+ep

- name: Create traefik systemd service
  copy:
    dest: /etc/systemd/system/traefik.service
    owner: root
    group: root
    mode: '0644'
    content: |
      [Unit]
      Description=Traefik Service
      After=network.target docker.service
      Requires=docker.service

      [Service]
      User=traefik
      Group=traefik
      ExecStart=/usr/local/bin/traefik --configFile=/etc/traefik/traefik.yml
      Restart=always

      [Install]
      WantedBy=multi-user.target

- name: Configure logrotate for Traefik logs
  copy:
    dest: /etc/logrotate.d/traefik
    owner: root
    group: root
    mode: '0644'
    content: |
      /var/log/traefik/*.log {
          daily
          missingok
          rotate 4
          compress
          delaycompress
          notifempty
          create 0640 traefik traefik
          sharedscripts
          postrotate
              kill -HUP $(pidof traefik) >/dev/null 2>&1 || true
          endscript
      }

- name: Reload systemd daemon
  command: systemctl daemon-reload

- name: Enable and start traefik service
  systemd:
    name: traefik
    enabled: yes
    state: started
